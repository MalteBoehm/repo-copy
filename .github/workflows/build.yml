name: Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest, ubuntu-latest]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.17'

      - name: Build
        run: |
          go build -o repo-copy${{ matrix.os == 'windows-latest' && '.exe' || '' }}
        
      - name: Rename Binary on Windows
        if: matrix.os == 'windows-latest'
        run: mv repo-copy.exe repo-copy

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_COPY_TOKEN }}
        with:
          tag_name: ${{ format('release-{0}-{1}', github.run_number, github.run_attempt) }}
          release_name: Release ${{ format('release-{0}-{1}', github.run_number, github.run_attempt) }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_COPY_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./repo-copy
          asset_name: repo-copy-${{ matrix.os }}
          asset_content_type: application/octet-stream
